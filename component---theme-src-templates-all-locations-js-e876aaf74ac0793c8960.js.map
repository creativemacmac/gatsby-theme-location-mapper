{"version":3,"sources":["webpack:///../theme/src/templates/all-locations.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../theme/src/components/locationsnav.js","webpack:///../theme/src/components/leafletmap.js","webpack:///../theme/src/components/page.js"],"names":["query","Default","_ref","data","allLocationsData","pageBody","allMdx","edges","forEach","edge","node","frontmatter","name","push","body","pageData","locations","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_page__WEBPACK_IMPORTED_MODULE_2__","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","shape","pathname","listItems","allFile","nodes","map","i","formattedName","fields","slug","split","slice","join","replace","react_default","index_esm","li","key","gatsby_browser_entry","to","LocationsNav","ul","_1941198692","LeafletMap","this","className","window","Map","bounds","getMapCenter","center","getSingleLocation","zoom","getZoomLevel","TileLayer","attribution","url","listMarkers","Component","length","lat","lng","latLngBounds","_locations$i","coords","address","days","description","hours","position","Marker","Popup","toLowerCase","Page","gatsby_plugin_mdx","locationsnav","leafletmap"],"mappings":"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","file":"component---theme-src-templates-all-locations-js-e876aaf74ac0793c8960.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Page from \"../components/page\";\n\n// Declaring query here allows us to shadow components\nexport const query = graphql`\n  query {\n    allMdx {\n      edges {\n        node {\n          frontmatter {\n            address\n            days\n            description\n            hours\n            lat\n            lng\n            name\n            title\n          }\n          body\n        }\n      }\n    }\n  }\n`;\n\nconst Default = ({ data }) => {\n  let allLocationsData = [];\n  let pageBody = \"\";\n  data.allMdx.edges.forEach(edge => {\n    if (edge.node.frontmatter.name !== \"All\") {\n      allLocationsData.push(edge.node.frontmatter)\n    } else {\n      pageBody = edge.node.body\n    }\n  });\n\n  const pageData = {\n    body: pageBody,\n    locations: allLocationsData\n  };\n\n  return <Page {...pageData} />;\n\n};\n\nexport default Default;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { StaticQuery, graphql, Link } from \"gatsby\";\nimport { Styled } from \"theme-ui\";\n\n// Declaring query here allows us to shadow components\nconst LocationsNav = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allFile {\n          nodes {\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    `}\n    render= {data => (\n      <Styled.ul>\n        {listItems(data)}\n      </Styled.ul>\n    )}\n  />\n)\n\nconst listItems = (data) => {\n  let items = data.allFile.nodes;\n  return items.map((node, i) => {\n    let name = node.fields.slug.split(\"/\").slice(2);\n    let formattedName = name.join(\"/\").replace(/[_-]/g, \" \");\n    return (\n      <Styled.li key={i}><Link to={node.fields.slug}>{formattedName}</Link></Styled.li>\n    )\n  })\n}\n\nexport default LocationsNav;\n","import React, { Component } from \"react\"\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Link } from \"gatsby\";\n\nclass LeafletMap extends Component {\n\n  render() {\n\n    const locations = this.props.locations;\n\n    return (\n      <div className=\"map-wrapper\">\n        {(typeof window !== \"undefined\") ? (\n          <Map bounds={getMapCenter(locations)} center={getSingleLocation(locations)} zoom={getZoomLevel(locations)}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          {listMarkers(locations)}\n          </Map>\n        ) : null}\n      </div>\n    )\n\n  }\n}\n\nconst getZoomLevel = (locations) => {\n  if (locations.length === 1) {\n    return 14;\n  }\n  return 4;\n}\n\nconst getSingleLocation = (locations) => {\n  if (locations.length === 1) {\n    let center = [locations[0].lat, locations[0].lng];\n    return center;\n  }\n  return null;\n}\n\nconst getMapCenter = (locations) => {\n  let latLngBounds = [];\n  for (let i = 0; i < locations.length; i++) {\n    let {lat, lng} = locations[i];\n    let coords = [];\n    coords.push(lat, lng);\n    latLngBounds.push(coords);\n  }\n  return latLngBounds.length > 1 ? latLngBounds : null;\n}\n\nconst listMarkers = (locations) => {\n  return locations.map((node, i) => {\n    let {lat, lng, name, address, days, description, hours} = node;\n    let position = [lat, lng];\n    return (\n      <Marker key={i} position={position}>\n        <Popup>\n          {!!name &&\n            <><Link to={`/locations/` + name.toLowerCase().replace(/ /g, '-')}><b>{name}</b></Link><br /></>\n          }\n          {!!address &&\n            <>{address}<br/></>\n          }\n          {!!days &&\n            <>{days}<br/></>\n          }\n          {!!hours &&\n            <>{hours}<br/></>\n          }\n          {!!description &&\n            <>{description}<br/></>\n          }\n          {!name &&\n            <><br /><Link to={`/locations/all`}>Back</Link></>\n          }\n        </Popup>\n      </Marker>\n    )\n  })\n};\n\nexport default LeafletMap;\n","import React from \"react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { Layout, Header, Main, Container, Footer } from \"theme-ui\";\nimport LocationsNav from \"./locationsnav\";\nimport LeafletMap from \"./leafletmap\";\nimport \"./page.css\";\n\nconst Page = (pageData) => {\n\n  return (\n    <Layout>\n      <Header>\n        <Container>\n          <h1>Location Mapper</h1>\n        </Container>\n      </Header>\n      <Main>\n        <Container>\n          <MDXRenderer>{pageData.body}</MDXRenderer>\n          <LocationsNav locations={pageData.locations} />\n          <LeafletMap locations={pageData.locations} />\n        </Container>\n      </Main>\n      <Footer>\n        <Container>\n          <p>Location Mapper</p>\n        </Container>\n      </Footer>\n    </Layout>\n  )\n\n};\n\nexport default Page;\n"],"sourceRoot":""}