{"version":3,"sources":["webpack:///../theme/src/templates/all-locations.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///../theme/src/components/locationsnav.js","webpack:///../theme/src/components/leafletmap.js","webpack:///../theme/src/components/page.js"],"names":["query","Default","_ref","data","allLocationsData","pageBody","allMdx","edges","forEach","edge","node","frontmatter","name","push","body","pageData","locations","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_page__WEBPACK_IMPORTED_MODULE_2__","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","_objectSpread","json","propTypes","PropTypes","shape","pathname","string","isRequired","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react_default","Fragment","StaticQuery","props","children","Consumer","object","func","listItems","allFile","nodes","map","i","formattedName","fields","slug","split","slice","join","replace","index_esm","li","key","gatsby_link_default","to","LocationsNav","gatsby_browser_entry_StaticQuery","ul","_1941198692","LeafletMap","this","window","className","Map","bounds","getMapCenter","center","getSingleLocation","zoom","getZoomLevel","TileLayer","attribution","url","listMarkers","Component","length","lat","lng","latLngBounds","_locations$i","coords","address","days","description","hours","position","Marker","Popup","toLowerCase","Page","gatsby_plugin_mdx","locationsnav","leafletmap"],"mappings":"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","file":"component---theme-src-templates-all-locations-js-412942b53cff001b6440.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Page from \"../components/page\";\n\n// Declaring query here allows us to shadow components\nexport const query = graphql`\n  query {\n    allMdx {\n      edges {\n        node {\n          frontmatter {\n            address\n            days\n            description\n            hours\n            lat\n            lng\n            name\n            title\n          }\n          body\n        }\n      }\n    }\n  }\n`;\n\nconst Default = ({ data }) => {\n  let allLocationsData = [];\n  let pageBody = \"\";\n  data.allMdx.edges.forEach(edge => {\n    if (edge.node.frontmatter.name !== \"All\") {\n      allLocationsData.push(edge.node.frontmatter)\n    } else {\n      pageBody = edge.node.body\n    }\n  });\n\n  const pageData = {\n    body: pageBody,\n    locations: allLocationsData\n  };\n\n  return <Page {...pageData} />;\n\n};\n\nexport default Default;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\nimport { StaticQuery, graphql, Link } from \"gatsby\";\nimport { Styled } from \"theme-ui\";\n\n// Declaring query here allows us to shadow components\nconst LocationsNav = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allFile {\n          nodes {\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    `}\n    render= {data => (\n      <Styled.ul>\n        {listItems(data)}\n      </Styled.ul>\n    )}\n  />\n)\n\nconst listItems = (data) => {\n  let items = data.allFile.nodes;\n  return items.map((node, i) => {\n    let name = node.fields.slug.split(\"/\").slice(2);\n    let formattedName = name.join(\"/\").replace(/[_-]/g, \" \");\n    return (\n      <Styled.li key={i}><Link to={node.fields.slug}>{formattedName}</Link></Styled.li>\n    )\n  })\n}\n\nexport default LocationsNav;\n","import React, { Component } from \"react\"\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Link } from \"gatsby\";\n\nclass LeafletMap extends Component {\n\n  render() {\n\n    const locations = this.props.locations;\n\n    if (typeof window !== \"undefined\") {\n      return (\n        <div className=\"map-wrapper\">\n          {(typeof window !== \"undefined\") ? (\n            <Map bounds={getMapCenter(locations)} center={getSingleLocation(locations)} zoom={getZoomLevel(locations)}>\n              <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n            {listMarkers(locations)}\n            </Map>\n          ) : null}\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nconst getZoomLevel = (locations) => {\n  if (locations.length === 1) {\n    return 14;\n  }\n  return 4;\n}\n\nconst getSingleLocation = (locations) => {\n  if (locations.length === 1) {\n    let center = [locations[0].lat, locations[0].lng];\n    return center;\n  }\n  return null;\n}\n\nconst getMapCenter = (locations) => {\n  let latLngBounds = [];\n  for (let i = 0; i < locations.length; i++) {\n    let {lat, lng} = locations[i];\n    let coords = [];\n    coords.push(lat, lng);\n    latLngBounds.push(coords);\n  }\n  return latLngBounds.length > 1 ? latLngBounds : null;\n}\n\nconst listMarkers = (locations) => {\n  return locations.map((node, i) => {\n    let {lat, lng, name, address, days, description, hours} = node;\n    let position = [lat, lng];\n    return (\n      <Marker key={i} position={position}>\n        <Popup>\n          {!!name &&\n            <><Link to={`/locations/` + name.toLowerCase()}><b>{name}</b></Link><br /></>\n          }\n          {!!address &&\n            <>{address}<br/></>\n          }\n          {!!days &&\n            <>{days}<br/></>\n          }\n          {!!hours &&\n            <>{hours}<br/></>\n          }\n          {!!description &&\n            <>{description}<br/></>\n          }\n          {!name &&\n            <><br /><Link to={`/locations/all`}>Back</Link></>\n          }\n        </Popup>\n      </Marker>\n    )\n  })\n};\n\nexport default LeafletMap;\n","import React from \"react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { Layout, Header, Main, Container, Footer } from \"theme-ui\";\nimport LocationsNav from \"./locationsnav\";\nimport LeafletMap from \"./leafletmap\";\nimport \"./page.css\";\n\nconst Page = (pageData) => {\n\n  return (\n    <Layout>\n      <Header>\n        <Container>\n          <h1>Location Mapper</h1>\n        </Container>\n      </Header>\n      <Main>\n        <Container>\n          <MDXRenderer>{pageData.body}</MDXRenderer>\n          <LocationsNav locations={pageData.locations} />\n          <LeafletMap locations={pageData.locations} />\n        </Container>\n      </Main>\n      <Footer>\n        <Container>\n          <p>Location Mapper</p>\n        </Container>\n      </Footer>\n    </Layout>\n  )\n\n};\n\nexport default Page;\n"],"sourceRoot":""}